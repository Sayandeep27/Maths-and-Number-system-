// C++ program to find GCD of two numbers

#include <iostream>
using namespace std;
// Recursive function to return gcd of a and b

int gcd(int a, int b)
{
    
    if (a == 0)
       return b;
    if (b == 0)
       return a;
   
    
    if (a == b)
        return a;
   
   
    if (a > b)
        return gcd(a-b, b);
        
        
    return gcd(a, b-a);
}
   

int main()
{
    int a = 98, b = 56;
    cout<<"GCD of "<<a<<" and "<<b<<" is "<<gcd(a, b);
    return 0;
}


Time Complexity: O(min(a,b))
Auxiliary Space: O(min(a,b))


---------------------------------------------------------------------------------------------------------------------------


Euclidean algorithm--

#include <iostream>
using namespace std;
// Recursive function to return gcd of a and b in single line
int gcd(int a, int b)
{
    return b == 0 ? a : gcd(b, a % b);    
}
   

int main()
{
    int a = 98, b = 56;
    cout<<"GCD of "<<a<<" and "<<b<<" is "<<gcd(a, b);
    return 0;
}



Time Complexity: O(log(min(a,b))|
Auxiliary Space: O(log(min(a,b))
